plugins {
    id 'java'
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

group = 'cronozx'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack-repo"
        url = "https://jitpack.io"
    }
}

shadowJar {
    archiveFileName.set(project.name + "-" + archiveVersion.get() + ".jar")

    // Classifier for publishing
    archiveClassifier.set("shaded")

    mustRunAfter("build")

    relocate("net.dv8tion", "cronozx.duelsbot.dependencies.jda")

    // Merge META-INF/services files where needed
    mergeServiceFiles()
}

dependencies {
    testImplementation(platform("org.junit:junit-bom:5.9.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    compileOnly ("org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT")
    implementation("net.dv8tion:JDA:5.0.0-beta.18")
    compileOnly("com.github.Realizedd.Duels:duels-api:3.5.1")
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
